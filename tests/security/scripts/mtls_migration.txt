#!/usr/bin/env bash

# Copyright Istio Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e
set -u
set -o pipefail

# $snippet curl_foo_bar_legacy syntax="bash" outputis="text"
#nolint
$ for from in "foo" "bar" "legacy"; do for to in "foo" "bar"; do kubectl exec $(kubectl get pod -l app=sleep -n ${from} -o jsonpath={.items..metadata.name}) -c sleep -n ${from} -- curl http://httpbin.${to}:8000/ip -s -o /dev/null -w "sleep.${from} to httpbin.${to}: %{http_code}\n"; done; done
# $verify
sleep.foo to httpbin.foo: 200
sleep.foo to httpbin.bar: 200
sleep.bar to httpbin.foo: 200
sleep.bar to httpbin.bar: 200
sleep.legacy to httpbin.foo: 200
sleep.legacy to httpbin.bar: 200
# $endsnippet

# $snippet verify_initial_peerauthentications syntax="bash" outputis="text"
$ kubectl get peerauthentication --all-namespaces
# $verify
No resources found.
# $endsnippet

# $snippet verify_initial_destinationrules syntax="bash" outputis="text"
$ kubectl get destinationrule --all-namespaces
# $verify
No resources found.
# $endsnippet


# $snippet configure_mtls_foo_peerauthentication syntax="bash"
$ kubectl apply -n foo -f - <<EOF
apiVersion: "security.istio.io/v1beta1"
kind: "PeerAuthentication"
metadata:
  name: "default"
spec:
  mtls:
    mode: STRICT
EOF
# $endsnippet

# Disable errors, since the next command is expected to return an error.
set +e
set +o pipefail

# NOTE: The output below is not in the order it would be displayed on a
# console because the snippet runner appends stderr to stdout.

# $snippet curl_foo_bar_legacy_post_pa syntax="bash" outputis="text"
#nolint
$ for from in "foo" "bar" "legacy"; do for to in "foo" "bar"; do kubectl exec $(kubectl get pod -l app=sleep -n ${from} -o jsonpath={.items..metadata.name}) -c sleep -n ${from} -- curl http://httpbin.${to}:8000/ip -s -o /dev/null -w "sleep.${from} to httpbin.${to}: %{http_code}\n"; done; done
# $verify
sleep.foo to httpbin.foo: 200
sleep.foo to httpbin.bar: 200
sleep.bar to httpbin.foo: 200
sleep.bar to httpbin.bar: 200
sleep.legacy to httpbin.foo: 000
sleep.legacy to httpbin.bar: 200
command terminated with exit code 56
# $endsnippet

# Restore error handling
set -e
set -o pipefail

# $snippet configure_mtls_entire_mesh syntax="bash"
$ kubectl apply -n istio-system -f - <<EOF
apiVersion: "security.istio.io/v1beta1"
kind: "PeerAuthentication"
metadata:
  name: "default"
spec:
  mtls:
    mode: STRICT
EOF
# $endsnippet

# Disable errors, since the next command is expected to return an error.
set +e
set +o pipefail

# NOTE: The output below is not in the order it would be displayed on a
# console because the snippet runner appends stderr to stdout.

# $snippet curl_foo_bar_legacy_httpbin_foo_mtls syntax="bash" outputis="text"
#nolint
$ for from in "foo" "bar" "legacy"; do for to in "foo" "bar"; do kubectl exec $(kubectl get pod -l app=sleep -n ${from} -o jsonpath={.items..metadata.name}) -c sleep -n ${from} -- curl http://httpbin.${to}:8000/ip -s -o /dev/null -w "sleep.${from} to httpbin.${to}: %{http_code}\n"; done; done
# $verify
sleep.foo to httpbin.foo: 200
sleep.foo to httpbin.bar: 200
sleep.bar to httpbin.foo: 200
sleep.bar to httpbin.bar: 200
sleep.legacy to httpbin.foo: 000
sleep.legacy to httpbin.bar: 000
command terminated with exit code 56
command terminated with exit code 56
# $endsnippet

# Restore error handling
set -e
set -o pipefail
