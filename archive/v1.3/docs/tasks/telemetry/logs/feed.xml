<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Logs on Istio</title><link>/v1.3/docs/tasks/telemetry/logs/</link><description>Recent content in Logs on Istio</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/v1.3/docs/tasks/telemetry/logs/feed.xml" rel="self" type="application/rss+xml"/><item><title>Collecting Logs</title><link>/v1.3/docs/tasks/telemetry/logs/collecting-logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v1.3/docs/tasks/telemetry/logs/collecting-logs/</guid><description>This task shows how to configure Istio to automatically gather telemetry for services in a mesh. At the end of this task, a new log stream will be enabled for calls to services within your mesh.
The Bookinfo sample application is used as the example application throughout this task.
Before you begin Install Istio in your cluster and deploy an application. This task assumes that Mixer is setup in a default configuration (--configDefaultNamespace=istio-system).</description></item><item><title>Getting Envoy&#39;s Access Logs</title><link>/v1.3/docs/tasks/telemetry/logs/access-log/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v1.3/docs/tasks/telemetry/logs/access-log/</guid><description>The simplest kind of Istio logging is Envoy&amp;rsquo;s access logging. Envoy proxies print access information to their standard output. The standard output of Envoy&amp;rsquo;s containers can then be printed by the kubectl logs command.
Before you begin Setup Istio by following the instructions in the Installation guide.
Deploy the sleep sample app to use as a test source for sending requests. If you have automatic sidecar injection enabled, run the following command to deploy the sample app:</description></item><item><title>Logging with Fluentd</title><link>/v1.3/docs/tasks/telemetry/logs/fluentd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v1.3/docs/tasks/telemetry/logs/fluentd/</guid><description>This task shows how to configure Istio to create custom log entries and send them to a Fluentd daemon. Fluentd is an open source log collector that supports many data outputs and has a pluggable architecture. One popular logging backend is Elasticsearch, and Kibana as a viewer. At the end of this task, a new log stream will be enabled sending logs to an example Fluentd / Elasticsearch / Kibana stack.</description></item></channel></rss>