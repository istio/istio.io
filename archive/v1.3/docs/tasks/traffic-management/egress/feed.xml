<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Egress on Istio</title><link>/v1.3/docs/tasks/traffic-management/egress/</link><description>Recent content in Egress on Istio</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/v1.3/docs/tasks/traffic-management/egress/feed.xml" rel="self" type="application/rss+xml"/><item><title>Accessing External Services</title><link>/v1.3/docs/tasks/traffic-management/egress/egress-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v1.3/docs/tasks/traffic-management/egress/egress-control/</guid><description>Because all outbound traffic from an Istio-enabled pod is redirected to its sidecar proxy by default, accessibility of URLs outside of the cluster depends on the configuration of the proxy. By default, Istio configures the Envoy proxy to passthrough requests for unknown services. Although this provides a convenient way to get started with Istio, configuring stricter control is usually preferable.
This task shows you how to access external services in three different ways:</description></item><item><title>Egress TLS Origination</title><link>/v1.3/docs/tasks/traffic-management/egress/egress-tls-origination/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v1.3/docs/tasks/traffic-management/egress/egress-tls-origination/</guid><description>The Control Egress Traffic task demonstrates how external, i.e., outside of the service mesh, HTTP and HTTPS services can be accessed from applications inside the mesh. As described in that task, a ServiceEntry is used to configure Istio to access external services in a controlled way. This example shows how to configure Istio to perform TLS origination for traffic to an external service. Istio will open HTTPS connections to the external service while the original traffic is HTTP.</description></item><item><title>Egress Gateways</title><link>/v1.3/docs/tasks/traffic-management/egress/egress-gateway/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v1.3/docs/tasks/traffic-management/egress/egress-gateway/</guid><description>This example does not work in Minikube. The Control Egress Traffic task shows how to configure Istio to allow access to external HTTP and HTTPS services from applications inside the mesh. There, the external services are called directly from the client sidecar. This example also shows how to configure Istio to call external services, although this time indirectly via a dedicated egress gateway service.</description></item><item><title>Egress Gateways with TLS Origination</title><link>/v1.3/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v1.3/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/</guid><description>The TLS Origination for Egress Traffic example shows how to configure Istio to perform TLS origination for traffic to an external service. The Configure an Egress Gateway example shows how to configure Istio to direct egress traffic through a dedicated egress gateway service. This example combines the previous two by describing how to configure an egress gateway to perform TLS origination for traffic to external services.
Before you begin Setup Istio by following the instructions in the Installation guide.</description></item><item><title>Egress using Wildcard Hosts</title><link>/v1.3/docs/tasks/traffic-management/egress/wildcard-egress-hosts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v1.3/docs/tasks/traffic-management/egress/wildcard-egress-hosts/</guid><description>The Control Egress Traffic task and the Configure an Egress Gateway example describe how to configure egress traffic for specific hostnames, like edition.cnn.com. This example shows how to enable egress traffic for a set of hosts in a common domain, for example *.wikipedia.org, instead of configuring each and every host separately.
Background Suppose you want to enable egress traffic in Istio for the wikipedia.org sites in all languages. Each version of wikipedia.</description></item><item><title>Monitoring and Policies for TLS Egress</title><link>/v1.3/docs/tasks/traffic-management/egress/egress_sni_monitoring_and_policies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v1.3/docs/tasks/traffic-management/egress/egress_sni_monitoring_and_policies/</guid><description>The Configure Egress Traffic using Wildcard Hosts example describes how to enable TLS egress traffic for a set of hosts in a common domain, in that case *.wikipedia.org. This example extends that example to show how to configure SNI monitoring and apply policies on TLS egress traffic.
Before you begin Setup Istio by following the instructions in the Installation guide.
Deploy the sleep sample app to use as a test source for sending requests.</description></item><item><title>Using an External HTTPS Proxy</title><link>/v1.3/docs/tasks/traffic-management/egress/http-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v1.3/docs/tasks/traffic-management/egress/http-proxy/</guid><description>The Configure an Egress Gateway example shows how to direct traffic to external services from your mesh via an Istio edge component called Egress Gateway. However, some cases require an external, legacy (non-Istio) HTTPS proxy to access external services. For example, your company may already have such a proxy in place and all the applications within the organization may be required to direct their traffic through it.
This example shows how to enable access to an external HTTPS proxy.</description></item></channel></rss>