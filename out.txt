[?25l[..................] / rollbackFailedOptional: verb npm-session 20410daf4dedf88[0m[K[..................] / rollbackFailedOptional: verb npm-session 20410daf4dedf88[0m[K[..................] / rollbackFailedOptional: verb npm-session 20410daf4dedf88[0m[K[..................] / rollbackFailedOptional: verb npm-session 20410daf4dedf88[0m[K[..................] / rollbackFailedOptional: verb npm-session 20410daf4dedf88[0m[K[..................] - rollbackFailedOptional: verb npm-session 20410daf4dedf88[0m[K[..................] | fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] | fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] | fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] | fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] \ fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] - fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] - fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] | fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] | fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] \ fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] \ fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] - fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] - fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] - fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] - fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] / loadDep:source-map: sill resolveWithNewModule babel-poly[0m[K[..................] / loadDep:source-map: sill resolveWithNewModule babel-poly[0m[K[..................] | loadDep:source-map: sill resolveWithNewModule babel-poly[0m[K[..................] / loadDep:source-map: sill resolveWithNewModule babel-poly[0m[K[..................] | fetchMetadata: sill resolveWithNewModule minimatch@3.0.4[0m[K[..................] - fetchMetadata: sill resolveWithNewModule minimatch@3.0.4[0m[K[..................] / fetchMetadata: sill resolveWithNewModule chalk@1.1.3 che[0m[K[..................] | fetchMetadata: sill resolveWithNewModule chalk@1.1.3 che[0m[K[..................] - fetchMetadata: sill resolveWithNewModule ansi-styles@2.2[0m[K[..................] \ fetchMetadata: sill resolveWithNewModule ansi-styles@2.2[0m[K[..................] - fetchMetadata: sill resolveWithNewModule ansi-regex@2.1.[0m[K[..................] \ fetchMetadata: sill resolveWithNewModule ansi-regex@2.1.[0m[K[..................] - fetchMetadata: sill resolveWithNewModule ansi-regex@2.1.[0m[K[..................] / fetchMetadata: sill resolveWithNewModule detect-indent@4[0m[K[..................] | fetchMetadata: sill resolveWithNewModule detect-indent@4[0m[K[..................] / fetchMetadata: sill resolveWithNewModule detect-indent@4[0m[K[..................] | fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[..................] \ fetchMetadata: sill resolveWithNewModule to-fast-propert[0m[K[..................] \ fetchMetadata: sill resolveWithNewModule repeating@2.0.1[0m[K[..................] | loadDep:lodash: sill resolveWithNewModule number-is-nan@[0m[K[..................] | loadDep:lodash: sill resolveWithNewModule number-is-nan@[0m[K[..................] \ fetchMetadata: sill resolveWithNewModule globals@9.18.0[0m[K[..................] | fetchMetadata: sill resolveWithNewModule globals@9.18.0[0m[K[..................] | fetchMetadata: sill resolveWithNewModule globals@9.18.0[0m[K[..................] | fetchMetadata: sill resolveWithNewModule globals@9.18.0[0m[K[..................] | fetchMetadata: sill resolveWithNewModule globals@9.18.0[0m[K[..................] | fetchMetadata: sill resolveWithNewModule ms@2.0.0 checki[0m[K[..................] - fetchMetadata: sill resolveWithNewModule loose-envify@1.[0m[K[..................] - fetchMetadata: sill resolveWithNewModule loose-envify@1.[0m[K[..................] \ fetchMetadata: sill resolveWithNewModule source-map-supp[0m[K[..................] / fetchMetadata: sill resolveWithNewModule os-tmpdir@1.0.2[0m[K[..................] \ fetchMetadata: sill resolveWithNewModule os-tmpdir@1.0.2[0m[K[..................] | fetchMetadata: sill resolveWithNewModule safe-buffer@5.1[0m[K[..................] \ fetchMetadata: sill resolveWithNewModule brace-expansion[0m[K[..................] \ fetchMetadata: sill resolveWithNewModule brace-expansion[0m[K[..................] - fetchMetadata: sill resolveWithNewModule brace-expansion[0m[K[..................] - fetchMetadata: sill resolveWithNewModule brace-expansion[0m[K[..................] / fetchMetadata: sill resolveWithNewModule balanced-match@[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] - fetchMetadata: sill cleanup remove extracted module[0m[K[#.................] - fetchMetadata: sill cleanup remove extracted module[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule micromatch@2.3.[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule micromatch@2.3.[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule regex-cache@0.4[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule arr-flatten@1.1[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule arr-flatten@1.1[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule fill-range@2.2.[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule fill-range@2.2.[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule isobject@2.1.0[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule is-buffer@1.1.6[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule isarray@1.0.0 c[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule kind-of@6.0.2 c[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule is-posix-bracke[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule remove-trailing[0m[K[#.................] \ loadDep:is-glob: sill resolveWithNewModule for-in@1.0.2[0m[K[#.................] - loadDep:is-glob: sill resolveWithNewModule for-in@1.0.2[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule glob-base@0.3.0[0m[K[#.................] \ loadDep:node-pre-gyp: sill resolveWithNewModule is-primi[0m[K[#.................] \ loadDep:node-pre-gyp: sill resolveWithNewModule is-primi[0m[K[#.................] - loadDep:wide-align: sill resolveWithNewModule nan@2.14.0[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule nan@2.14.0 chec[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule binary-extensio[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule readable-stream[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule readable-stream[0m[K[#.................] \ loadDep:to-regex: sill resolveWithNewModule object.pick@[0m[K[#.................] | loadDep:to-regex: sill resolveWithNewModule object.pick@[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule snapdragon-node[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule snapdragon-node[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule snapdragon-node[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule snapdragon-node[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule is-number@3.0.0[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule is-number@3.0.0[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule map-cache@0.2.2[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule map-cache@0.2.2[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule pascalcase@0.1.[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule pascalcase@0.1.[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule pascalcase@0.1.[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule pascalcase@0.1.[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule pascalcase@0.1.[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule get-value@2.0.6[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule isobject@3.0.1[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule has-values@1.0.[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule has-values@1.0.[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule has-values@1.0.[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule has-values@1.0.[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule has-values@1.0.[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule has-values@1.0.[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule has-values@1.0.[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule has-values@1.0.[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule has-values@1.0.[0m[K[#.................] / loadDep:split-string: sill resolveWithNewModule kind-of@[0m[K[#.................] - loadDep:split-string: sill resolveWithNewModule kind-of@[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule isobject@3.0.1[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule isobject@3.0.1[0m[K[#.................] / loadDep:set-value: sill resolveWithNewModule assign-symb[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule has-values@0.1.[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule static-extend@0[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule static-extend@0[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule is-descriptor@0[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule is-descriptor@0[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule is-accessor-des[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule copy-descriptor[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule copy-descriptor[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule copy-descriptor[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule is-descriptor@1[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule is-extendable@1[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule resolve-url@0.2[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule kind-of@6.0.2 c[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule safe-regex@1.1.[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule kind-of@6.0.2 c[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule kind-of@6.0.2 c[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule kind-of@6.0.2 c[0m[K[#.................] / loadDep:kind-of: sill resolveWithNewModule is-descriptor[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule is-descriptor@0[0m[K[#.................] - loadDep:to-regex: sill resolveWithNewModule kind-of@3.2.[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule isobject@3.0.1[0m[K[##................] \ loadDep:path-is-absolute: sill resolveWithNewModule proc[0m[K[##................] - loadDep:path-is-absolute: sill resolveWithNewModule proc[0m[K[##................] - fetchMetadata: sill resolveWithNewModule once@1.4.0 chec[0m[K[##................] / fetchMetadata: sill resolveWithNewModule wrappy@1.0.2 ch[0m[K[###...............] | fetchMetadata: sill resolveWithNewModule object-assign@4[0m[K[###...............] | fetchMetadata: sill resolveWithNewModule object-assign@4[0m[K[######............] | diffTrees: sill install generateActionsToTake[0m[K[#######...........] / postinstall: sill install executeActions[0m[K[#######...........] - extract:babel-cli: verb lock using /root/.npm/_locks/sta[0m[K[#######...........] - extract:babel-cli: verb lock using /root/.npm/_locks/sta[0m[K[#######...........] - extract:babel-cli: verb lock using /root/.npm/_locks/sta[0m[K[#######...........] - extract:babel-cli: verb lock using /root/.npm/_locks/sta[0m[K[#######...........] / extract:isobject: sill extract micromatch@3.1.10[0m[K[########..........] \ extract:globals: sill extract nanomatch@1.2.13[0m[K[########..........] \ extract:wrappy: sill extract isobject@2.1.0[0m[K[########..........] - extract:inherits: sill extract inherits@^2.0.1 extracted[0m[K[########..........] - extract:babylon: http fetch GET 200 https://registry.npm[0m[K[########..........] \ extract:fill-range: sill extract extend-shallow@2.0.1[0m[K[#########.........] - extract:supports-color: sill extract regex-not@1.0.2[0m[K[#########.........] \ extract:union-value: http fetch GET 200 https://registry[0m[K[#########.........] - extract:slash: sill extract regenerator-runtime@0.11.1[0m[K[#########.........] \ extract:anymatch: sill extract is-descriptor@0.1.6[0m[K[#########.........] | extract:snapdragon-util: sill extract process-nextick-ar[0m[K[##########........] / extract:define-property: sill extract kind-of@6.0.2[0m[K[##########........] - extract:normalize-path: sill tarball no local data for f[0m[K[##########........] | extract:isobject: sill extract isobject@^3.0.1 extracted[0m[K[###########.......] / extract:arr-diff: sill extract arr-diff@^4.0.0 extracted[0m[K[###########.......] - extract:define-property: sill extract extglob@0.3.2[0m[K[###########.......] | extract:js-tokens: http fetch GET 200 https://registry.n[0m[K[############......] | extract:kind-of: http fetch GET 200 https://registry.npm[0m[K[############......] / extract:has-values: sill extract has-values@^1.0.0 extra[0m[K[############......] - extract:nan: sill extract nan@^2.12.1 extracted to /root[0m[K[############......] - extract:nan: sill extract nan@^2.12.1 extracted to /root[0m[K[############......] \ extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] \ extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] \ extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] \ extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] \ extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] \ extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] \ extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] | extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] | extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] / extract:fsevents: sill extract fsevents@^1.0.0 extracted[0m[K[############......] / extract:fsevents: sill extract fsevents@^1.0.0 extracted[0m[K[############......] - extract:lodash: sill extract lodash@^4.17.4 extracted to[0m[K[############......] \ extract:lodash: sill extract lodash@^4.17.4 extracted to[0m[K[############......] \ extract:lodash: sill extract lodash@^4.17.4 extracted to[0m[K[############......] | finalize:core-js: sill finalize /root/.npm/_npx/33/lib/n[0m[K[############......] - finalize:sax: sill finalize /root/.npm/_npx/33/lib/node_[0m[K[############......] \ finalize:is-plain-object: sill finalize /root/.npm/_npx/[0m[K[############......] | finalize:object-copy: sill finalize /root/.npm/_npx/33/l[0m[K[############......] - finalize:remove-trailing-separator: sill finalize /root/[0m[K[############......] \ finalize:is-number: sill finalize /root/.npm/_npx/33/lib[0m[K[############......] / finalize:readable-stream: sill finalize /root/.npm/_npx/[0m[K[############......] | refresh-package-json:babel-cli: timing action:finalize C[0m[K[############......] | refresh-package-json:babel-cli: timing action:finalize C[0m[K[############......] - refresh-package-json:brace-expansion: sill refresh-packa[0m[K[############......] - refresh-package-json:brace-expansion: sill refresh-packa[0m[K[############......] | refresh-package-json:isobject: sill refresh-package-json[0m[K[############......] | refresh-package-json:isobject: sill refresh-package-json[0m[K[############......] - refresh-package-json:kind-of: sill refresh-package-json[0m[K[############......] | refresh-package-json:object-copy: sill refresh-package-j[0m[K[############......] / refresh-package-json:minimatch: sill refresh-package-jso[0m[K[############......] \ preinstall:babel-cli: timing action:refresh-package-json[0m[K[############......] / build:mixin-deep: sill linkStuff mixin-deep@1.3.2 is ins[0m[K[############......] \ install:mixin-deep: info lifecycle mixin-deep@1.3.2~inst[0m[K[K[?25h[?25l[############......] / postinstall: info lifecycle babel-cli@6.26.0~postinstall[0m[K[############......] / postinstall: info lifecycle babel-cli@6.26.0~postinstall[0m[K[K[?25h[?25l[..................] / rollbackFailedOptional: verb npm-session 77bde6d4d7d5e62[0m[K[..................] / rollbackFailedOptional: verb npm-session 77bde6d4d7d5e62[0m[K[..................] / rollbackFailedOptional: verb npm-session 77bde6d4d7d5e62[0m[K[..................] - rollbackFailedOptional: verb npm-session 77bde6d4d7d5e62[0m[K[..................] \ fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] / fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] / fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] \ fetchMetadata: sill resolveWithNewModule babel-cli@6.26.[0m[K[..................] | loadDep:source-map: sill resolveWithNewModule v8flags@2.[0m[K[..................] \ loadDep:source-map: sill resolveWithNewModule v8flags@2.[0m[K[..................] / loadDep:source-map: sill resolveWithNewModule v8flags@2.[0m[K[..................] | fetchMetadata: sill resolveWithNewModule private@0.1.8 c[0m[K[..................] / fetchMetadata: sill resolveWithNewModule js-tokens@3.0.2[0m[K[..................] / fetchMetadata: sill resolveWithNewModule js-tokens@3.0.2[0m[K[..................] | fetchMetadata: sill resolveWithNewModule strip-ansi@3.0.[0m[K[..................] \ fetchMetadata: sill resolveWithNewModule ansi-regex@2.1.[0m[K[..................] - fetchMetadata: sill resolveWithNewModule ansi-regex@2.1.[0m[K[..................] - fetchMetadata: sill resolveWithNewModule jsesc@1.3.0 che[0m[K[..................] | fetchMetadata: sill resolveWithNewModule repeating@2.0.1[0m[K[..................] - loadDep:lodash: sill resolveWithNewModule number-is-nan@[0m[K[..................] / loadDep:lodash: sill resolveWithNewModule number-is-nan@[0m[K[..................] / loadDep:lodash: sill resolveWithNewModule number-is-nan@[0m[K[..................] \ fetchMetadata: sill resolveWithNewModule ms@2.0.0 checki[0m[K[..................] - fetchMetadata: sill resolveWithNewModule loose-envify@1.[0m[K[..................] - fetchMetadata: sill resolveWithNewModule home-or-tmp@2.0[0m[K[..................] / fetchMetadata: sill resolveWithNewModule os-homedir@1.0.[0m[K[..................] | fetchMetadata: sill resolveWithNewModule minimist@0.0.8[0m[K[..................] \ fetchMetadata: sill resolveWithNewModule safe-buffer@5.1[0m[K[..................] - fetchMetadata: sill resolveWithNewModule brace-expansion[0m[K[..................] / fetchMetadata: sill resolveWithNewModule brace-expansion[0m[K[..................] / fetchMetadata: sill resolveWithNewModule brace-expansion[0m[K[..................] / fetchMetadata: sill resolveWithNewModule brace-expansion[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule regenerator-run[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule micromatch@2.3.[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule micromatch@2.3.[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule micromatch@2.3.[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule regex-cache@0.4[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule arr-flatten@1.1[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule expand-range@1.[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule fill-range@2.2.[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule fill-range@2.2.[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule is-buffer@1.1.6[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule isarray@1.0.0 c[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule math-random@1.0[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule math-random@1.0[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule math-random@1.0[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule math-random@1.0[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule math-random@1.0[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule math-random@1.0[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule math-random@1.0[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule math-random@1.0[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule math-random@1.0[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule math-random@1.0[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule is-posix-bracke[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule is-posix-bracke[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule remove-trailing[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule for-own@0.1.5 c[0m[K[#.................] | loadDep:is-glob: sill resolveWithNewModule for-in@1.0.2[0m[K[#.................] \ loadDep:is-glob: sill resolveWithNewModule for-in@1.0.2[0m[K[#.................] \ loadDep:is-glob: sill resolveWithNewModule for-in@1.0.2[0m[K[#.................] \ loadDep:is-glob: sill resolveWithNewModule for-in@1.0.2[0m[K[#.................] \ loadDep:is-glob: sill resolveWithNewModule for-in@1.0.2[0m[K[#.................] \ loadDep:is-glob: sill resolveWithNewModule for-in@1.0.2[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule is-dotfile@1.0.[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule is-equal-shallo[0m[K[#.................] | loadDep:node-pre-gyp: sill resolveWithNewModule is-primi[0m[K[#.................] \ loadDep:wide-align: sill resolveWithNewModule nan@2.14.0[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule nan@2.14.0 chec[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule binary-extensio[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule binary-extensio[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule binary-extensio[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule readable-stream[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule readable-stream[0m[K[#.................] | loadDep:to-regex: sill resolveWithNewModule object.pick@[0m[K[#.................] / loadDep:to-regex: sill resolveWithNewModule object.pick@[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule snapdragon-node[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule is-number@3.0.0[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule source-map-reso[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule component-emitt[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule component-emitt[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule union-value@1.0[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule isobject@3.0.1[0m[K[#.................] | loadDep:split-string: sill resolveWithNewModule kind-of@[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule isobject@3.0.1[0m[K[#.................] | loadDep:set-value: sill resolveWithNewModule assign-symb[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule isobject@2.1.0[0m[K[#.................] - fetchMetadata: sill resolveWithNewModule static-extend@0[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule is-descriptor@0[0m[K[#.................] | loadDep:kind-of: sill resolveWithNewModule object-copy@0[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule is-extendable@1[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule is-extendable@1[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule is-extendable@1[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule is-extendable@1[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule is-extendable@1[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule source-map-url@[0m[K[#.................] \ fetchMetadata: sill resolveWithNewModule kind-of@6.0.2 c[0m[K[#.................] | fetchMetadata: sill resolveWithNewModule kind-of@6.0.2 c[0m[K[#.................] \ loadDep:to-regex: sill resolveWithNewModule is-accessor-[0m[K[#.................] \ loadDep:to-regex: sill resolveWithNewModule is-accessor-[0m[K[#.................] | loadDep:to-regex: sill resolveWithNewModule kind-of@3.2.[0m[K[#.................] / fetchMetadata: sill resolveWithNewModule isobject@3.0.1[0m[K[##................] / loadDep:path-is-absolute: sill resolveWithNewModule util[0m[K[##................] \ loadDep:path-is-absolute: sill resolveWithNewModule util[0m[K[##................] \ loadDep:path-is-absolute: sill resolveWithNewModule util[0m[K[##................] - fetchMetadata: sill resolveWithNewModule fs.realpath@1.0[0m[K[##................] / fetchMetadata: sill resolveWithNewModule wrappy@1.0.2 ch[0m[K[######............] | diffTrees: sill install generateActionsToTake[0m[K[#######...........] / postinstall: sill install executeActions[0m[K[#######...........] \ extract:babel-cli: verb lock using /root/.npm/_locks/sta[0m[K[#######...........] \ extract:babel-cli: verb lock using /root/.npm/_locks/sta[0m[K[#######...........] \ extract:babel-cli: verb lock using /root/.npm/_locks/sta[0m[K[#######...........] \ extract:babel-cli: verb lock using /root/.npm/_locks/sta[0m[K[########..........] \ extract:inherits: sill extract babel-generator@6.26.1[0m[K[########..........] | extract:concat-map: sill extract core-util-is@~1.0.0 ext[0m[K[########..........] / extract:output-file-sync: sill extract babel-code-frame@[0m[K[#########.........] - extract:to-object-path: sill extract extend-shallow@2.0.[0m[K[#########.........] \ extract:static-extend: sill extract normalize-path@2.1.1[0m[K[#########.........] | extract:isobject: sill extract snapdragon-util@^3.0.1 ex[0m[K[##########........] - extract:normalize-path: sill extract home-or-tmp@2.0.0[0m[K[##########........] \ extract:kind-of: sill extract is-extendable@1.0.1[0m[K[##########........] | extract:posix-character-classes: sill extract is-accesso[0m[K[###########.......] | extract:mixin-deep: sill extract kind-of@4.0.0[0m[K[###########.......] / extract:isobject: sill extract is-windows@^1.0.2 extract[0m[K[############......] / extract:source-map: sill extract source-map@^0.5.6 extra[0m[K[############......] - extract:nan: sill extract nan@^2.12.1 extracted to /root[0m[K[############......] - extract:nan: sill extract nan@^2.12.1 extracted to /root[0m[K[############......] \ extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] \ extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] \ extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] \ extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] \ extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] \ extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] \ extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] \ extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] \ extract:babel-runtime: sill extract babel-runtime@^6.26.[0m[K[############......] | extract:fsevents: sill extract fsevents@^1.0.0 extracted[0m[K[############......] / extract:lodash: sill extract lodash@^4.17.4 extracted to[0m[K[############......] / extract:lodash: sill extract lodash@^4.17.4 extracted to[0m[K[############......] / extract:lodash: sill extract lodash@^4.17.4 extracted to[0m[K[############......] - finalize:define-property: sill finalize /root/.npm/_npx/[0m[K[############......] - finalize:os-homedir: sill finalize /root/.npm/_npx/75/li[0m[K[############......] / finalize:kind-of: sill finalize /root/.npm/_npx/75/lib/n[0m[K[############......] / finalize:nan: sill finalize /root/.npm/_npx/75/lib/node_[0m[K[############......] / finalize:kind-of: sill finalize /root/.npm/_npx/75/lib/n[0m[K[############......] | finalize:split-string: sill finalize /root/.npm/_npx/75/[0m[K[############......] | finalize:nanomatch: sill finalize /root/.npm/_npx/75/lib[0m[K[############......] - finalize:v8flags: sill finalize /root/.npm/_npx/75/lib/n[0m[K[############......] - refresh-package-json:babel-cli: timing action:finalize C[0m[K[############......] - refresh-package-json:babel-cli: timing action:finalize C[0m[K[############......] | refresh-package-json:console-control-strings: sill refre[0m[K[############......] | refresh-package-json:console-control-strings: sill refre[0m[K[############......] - refresh-package-json:isobject: sill refresh-package-json[0m[K[############......] / refresh-package-json:class-utils: sill refresh-package-j[0m[K[############......] | refresh-package-json:kind-of: sill refresh-package-json[0m[K[############......] \ refresh-package-json:kind-of: sill refresh-package-json[0m[K[############......] \ refresh-package-json:math-random: sill refresh-package-j[0m[K[############......] / preinstall:strip-ansi: info lifecycle is-number@3.0.0~pr[0m[K[############......] / build:micromatch: sill linkStuff micromatch@3.1.10 is in[0m[K[############......] \ postinstall:babel-cli: sill doSerial postinstall 2292[0m[K[K[?25h[?25l[############......] \ postinstall: info lifecycle babel-cli@6.26.0~postinstall[0m[K[############......] \ postinstall: info lifecycle babel-cli@6.26.0~postinstall[0m[K[K[?25hHugo Static Site Generator v0.55.5-A83256B9 linux/amd64 BuildDate: 2019-05-02T13:03:36Z
[?25lBuilding sites … [?25h[K
                   | EN  | ZH   
+------------------+-----+-----+
  Pages            | 487 | 407  
  Paginator pages  |   0 |   0  
  Non-page files   | 184 | 145  
  Static files     |  46 |  46  
  Processed images |   0 |   0  
  Aliases          |   1 |   0  
  Sitemaps         |   2 |   1  
  Cleaned          |   0 |   0  

Total in 16273 ms
mdspell 1.3.1
mdl 0.5.0
htmlproofer 3.9.2
sass-lint 1.13.1
tslint 5.18.0
[32m>>[39m 430 files are free from spelling errors
