"use strict";const darkThemeClass = 'dark-theme';const darkTheme = 'Dark Theme';const darkThemeItem = 'dark-theme-item';const lightTheme = 'Light Theme';const lightThemeItem = 'light-theme-item';const styleCookie = 'style';function applyStyleSheet(title) {    if (title === darkTheme) {        document.body.classList.add(darkThemeClass);    } else {        document.body.classList.remove(darkThemeClass);    }    // set the active theme menu item    let item = getById(lightThemeItem);    if (item) {        if (title === darkTheme) {            item.classList.remove(active);        } else {            item.classList.add(active);        }    }    item = getById(darkThemeItem);    if (item) {        if (title === darkTheme) {            item.classList.add(active);        } else {            item.classList.remove(active);        }    }}function createCookie(name, value, days) {    let expires = "";    if (days) {        const date = new Date();        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));        expires = "; expires=" + date.toGMTString();    }    document.cookie = name + "=" + value + expires + "; path=/";}function readCookie(name) {    const nameEQ = name + "=";    const ca = document.cookie.split(';');    for (let i = 0; i < ca.length; i++) {        let c = ca[i];        while (c.charAt(0) === ' ') {            c = c.substring(1, c.length);        }        if (c.indexOf(nameEQ) === 0) {            let result = c.substring(nameEQ.length, c.length);            // convert legacy cookie values            if (result === "light") {                result = lightTheme;            } else if (result === "dark") {                result = darkTheme;            }            return result;        }    }    return null;}let cookieValue = readCookie(styleCookie);applyStyleSheet(cookieValue);onDOMLoaded(()  => {    applyStyleSheet(cookieValue);    listen(getById(lightThemeItem), click, () => {        applyStyleSheet(lightTheme);        createCookie(styleCookie, lightTheme);        return false;    });    listen(getById(darkThemeItem), click, () => {        applyStyleSheet(darkTheme);        createCookie(styleCookie, darkTheme);        return false;    });});